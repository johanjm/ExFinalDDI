{"version":3,"sources":["components/App.js","reportWebVitals.js","index.js"],"names":["App","useState","AlAD","SetAlAD","AlID","SetIbusAD","id","advice","data","SetData","AdviAL","text","a","fetch","url","json","alet","console","log","slips","insertar","estado","aleto","slip","valorInsertar","dataNueva","push","useEffect","class","onClick","map","elemento","filter","cod","eliminar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAwIeA,MAlIf,WACE,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,qBAAxB,mBAAOG,EAAP,KACA,GADA,KACwBH,mBAAS,KAAjC,mBACA,GADA,UAC2BA,mBAAS,KAApC,mBAAcI,GAAd,WASA,EAAwBJ,mBAPZ,CACV,CAACK,GAAI,EAAGC,OAAQ,uEAChB,CAACD,GAAI,EAAGC,OAAQ,0EAChB,CAACD,GAAI,EAAGC,OAAQ,+CAChB,CAACD,GAAI,EAAGC,OAAQ,uDAGlB,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA2BR,mBAAS,CAClCK,GAAG,GACHC,OAAO,KAFT,mBAYMG,GAZN,UAYY,uCAAE,WAAOC,GAAP,iBAAAC,EAAA,sEACMC,MAAM,4CAA4CF,GADxD,cACNG,EADM,gBAEMA,EAAIC,OAFV,OAENC,EAFM,OAGZC,QAAQC,IAAIF,EAAKG,OACjBd,EAAUW,GAJE,2CAAF,uDAUNI,EAAQ,uCAAE,WAAOC,GAAP,uBAAAT,EAAA,sEACIC,MAAM,qCADV,cACRC,EADQ,gBAEIA,EAAIC,OAFR,OAERC,EAFQ,OAGRM,EAAQN,EAAKO,KACnBN,QAAQC,IAAII,GACZnB,EAAQmB,EAAMf,QALA,KAMPc,EANO,OAOP,SAPO,QAUP,QAVO,gCAQVA,EAAQ,KARE,oCAWNG,EAAc,CAAClB,GAAIgB,EAAMhB,GAAGC,OAAQe,EAAMf,SAC1CkB,EAAYjB,GACNkB,KAAKF,GACff,EAAQgB,GACRR,QAAQC,IAAIM,GAfF,iEAAF,sDAyBd,OAJAG,qBAAU,WACRP,MACA,IAGA,qCACA,sBAAKd,GAAG,MAAR,UACE,sBAAKA,GAAG,QAAR,UACE,mBAAGsB,MAAM,SAAT,gCAAqC,uBACrC,4BAAI1B,IAAS,uBAFf,MAGME,EAHN,MAIE,sBAAKE,GAAG,MAAR,UAAc,sBAAKA,GAAG,SAAR,UAAiB,wBAAQsB,MAAM,SAASC,QAAS,kBAAIT,EAAS,QAA7C,kCAAjB,OACd,sBAAKd,GAAG,SAAR,cAAkB,wBAAQsB,MAAM,SAAQC,QAAS,kBAAIT,EAAS,SAA5C,wCAMpB,sBAAKd,GAAG,QAAR,UACI,mBAAGsB,MAAM,SAAT,gCAAwC,uBACxC,kCACE,gCACE,+BACE,wCACA,gDAGJ,gCACGpB,EAAKsB,KAAI,SAAAC,GAAQ,OACd,+BACE,6BAAKA,EAASxB,SACd,6BAAI,wBAAQqB,MAAM,SAASC,QAAS,kBApEtC,SAACE,GACftB,EAAQD,EAAKwB,QAAO,SAAAC,GAAG,OAAEA,EAAI3B,IAAKyB,MAmEsBG,CAASH,EAASzB,KAAtD,yCAWpB,sBAAKA,GAAG,MAAR,UACA,mBAAGsB,MAAM,SAAT,kCAA0C,0BAK1C,sBAAKtB,GAAG,MAAR,UACA,kDAAwB,0BAAe,uBACvC,wBAAQsB,MAAM,SAASC,QAAS,kBAAInB,EAAO,QAA3C,oBAAkE,0BAKlE,sBAAKJ,GAAG,MAAR,UACA,mBAAGsB,MAAM,SAAT,uCAA+C,8BC5GpCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.22433d30.chunk.js","sourcesContent":["\nimport React, {Fragment, useEffect,useState} from 'react';\nimport '../Styles/App.css';\n\n\n\nfunction App() {\n  const [AlAD, SetAlAD] = useState()\n  const [AlID, SetAlID] = useState()\n  const [IdAD, SetIdAD] = useState([])\n  const [BusAD, SetIbusAD] = useState([])\n \n  const hola =[\n    {id: 1, advice: 'Remember that spiders are more afraid of you, than you are of them.'},\n    {id: 2, advice: 'No Remember that spiders are more afraid of you, than you are of them.'},\n    {id: 3, advice: 'R more afraid of you, than you are of them.'},\n    {id: 4, advice: 'No Remember that spiders are more afraid of them.'}\n  ];\n\n  const [data, SetData] = useState(hola);\n\n  const [select, setSelect]= useState({\n    id:'',\n    advice:''\n  } \n  )\n  \n  const eliminar =(elemento) =>{\n    SetData(data.filter(cod=>cod.id !=elemento))\n  }\n\n \n\n  const AdviAL= async (text) => {\n    const url = await fetch('https://api.adviceslip.com/advice/search/'+text)\n    const alet= await url.json()\n    console.log(alet.slips)\n    SetIbusAD(alet);\n\n    //SetAlAD(aleto.advice)\n    //SetAlID(aleto.id)\n    //console.log();\n  }\n  const insertar =async (estado)=>{\n    const url = await fetch('https://api.adviceslip.com/advice')\n    const alet= await url.json()\n    const aleto = alet.slip\n    console.log(aleto);\n    SetAlAD(aleto.advice)\n    switch(estado){\n      case \"next\":\n        estado =null;\n        break;\n      case \"add\":\n        var valorInsertar={id: aleto.id,advice: aleto.advice};\n        var dataNueva = data;\n        dataNueva.push(valorInsertar);\n        SetData(dataNueva);\n        console.log(valorInsertar)\n        break;\n    }\n      \n  }\n\n  useEffect(() => {\n    insertar();\n  },[])\n  \n  return (\n    <>\n    <div id=\"cab\">\n      <div id=\"mitad\">\n        <p class=\"titulo\">Consejo del día</p><tr />\n        <p>{AlAD}</p><tr />\n        ---{AlID}---\n        <div id=\"cab\"><div id=\"mitad1\"><button class=\"boton1\" onClick={()=>insertar(\"add\")}>Marcar como favorito</button> </div>\n        <div id=\"mitad1\"> <button class=\"boton1\"onClick={()=>insertar(\"next\")}  >Siguiente consejo</button></div>\n        </div>\n      </div>\n\n\n\n      <div id=\"mitad\">\n          <p class=\"titulo\">Consejos Favoritos</p><tr />\n          <table>\n            <thead>\n              <tr>\n                <th>Advice</th>\n                <th>Acción</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map(elemento => (\n                  <tr>\n                    <td>{elemento.advice}</td>\n                    <td><button class=\"boton1\" onClick={()=>eliminar(elemento.id)}>Eliminar</button></td>\n                  </tr>))}\n              \n            </tbody>\n          </table>\n        </div>\n    </div>\n\n\n\n\n    <div id=\"cab\">\n    <p class=\"titulo\">Buscador de Consejos</p><tr />\n    \n    </div>\n    \n    \n    <div id=\"cab\">\n    <p> *Palabra clave: </p><input></input><tr/>\n    <button class=\"boton1\" onClick={()=>AdviAL(\"fun\")}>Buscar</button><tr/>\n    </div>\n    \n    \n    \n    <div id=\"cab\">\n    <p class=\"titulo\">Resultados de la busqueda</p><tr />\n    \n\n    </div>\n\n\n\n    </>\n    \n       \n  )  \n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App></App>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}